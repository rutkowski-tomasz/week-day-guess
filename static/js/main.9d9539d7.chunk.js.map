{"version":3,"sources":["Components/Breakdown.js","Helpers/DateHelpers.js","Components/Guess.js","Components/Status.js","App.js","reportWebVitals.js","index.js"],"names":["Breakdown","_ref","hasGuessed","dateToGuess","isLeap","year","Date","getDate","date","toString","padStart","month","getMonth","referenceDate","Error","concat","getReferenceDate","getFullYear","dateOffset","century","Math","floor","centuryReference","getCenturyReference","centuryOffset","yearReference","getCenturyOffset","decade","twelveYearsCount","twelveRest","restLeapYears","sum","day","react_default","a","createElement","className","useDateHelpers","generateDate","startYear","arguments","length","undefined","endYear","startDate","diff","getTime","random","formatDate","formatWeekDay","Guess","onGenerateNewGuess","onGuess","button_esm","label","onClick","console","log","Object","toConsumableArray","Array","map","_","i","key","Status","guessedDay","startGuessingTime","guessTime","getDay","getStatus","App","_useDateHelpers","_useState","useState","_useState2","slicedToArray","setDateToGuess","_useState3","_useState4","setGuessedDay","_useState5","_useState6","setStartGuessingTime","Components_Status","Components_Guess","Components_Breakdown","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"qNAuGeA,MArGf,SAAAC,GAmDI,IAnD4C,IAA3BC,EAA2BD,EAA3BC,WAAYC,EAAeF,EAAfE,YAEvBC,EAAS,SAAAC,GAAI,OAAwC,KAApC,IAAIC,KAAKD,EAAM,EAAG,IAAIE,WA4CvCC,EAAOL,EAAYI,UAAUE,WAAWC,SAAS,EAAG,KACpDC,GAASR,EAAYS,WAAa,GAAGH,WAAWC,SAAS,EAAG,KAE5DG,EA7CmB,SAACF,EAAON,GAC7B,OAAQM,GACJ,KAAK,EAAG,OAAQP,EAAOC,GAAY,EAAJ,EAC/B,KAAK,EAAG,OAAQD,EAAOC,GAAa,GAAL,GAC/B,KAAK,EAAG,OAAO,GACf,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAO,GACf,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAO,GACf,KAAK,GAAI,OAAO,EAChB,KAAK,GAAI,OAAO,GAChB,QAAS,MAAM,IAAIS,MAAJ,iBAAAC,OAA2BJ,KA+B5BK,CAAiBb,EAAYS,WAAYT,EAAYc,eACvEC,GAAcV,EAAOK,GAAiB,EACnCK,EAAa,GAChBA,GAAc,EAalB,IAVA,IAAMC,EAAwD,IAA9CC,KAAKC,MAAMlB,EAAYc,cAAgB,KACjDK,EAlCsB,SAACjB,GAGzB,IAFAA,EAAgC,IAAzBe,KAAKC,MAAMhB,EAAO,KAElBA,EAAO,KACVA,GAAQ,IAEZ,KAAOA,EAAO,MACVA,GAAQ,IAGZ,OAAOA,EAwBckB,CAAoBpB,EAAYc,eACnDO,EAtBmB,SAACC,GAEtB,OAAQA,GACJ,KAAK,IAAM,OAAO,EAClB,KAAK,KAAM,OAAO,EAClB,KAAK,KAAM,OAAO,EAClB,KAAK,KAAM,OAAO,EAClB,QAAS,MAAM,IAAIX,MAAJ,0BAAAC,OAAoCU,KAerCC,CAAiBJ,GAEjCK,EAASxB,EAAYc,cAAgBE,EACrCS,EAAmBR,KAAKC,MAAMM,EAAS,IACvCE,EAAaF,EAA6B,GAAnBC,EACvBE,EAAgBV,KAAKC,MAAMQ,EAAa,GACxCE,EAAMb,EAAaM,EAAgBI,EAAmBC,EAAaC,EACrEE,EAAMD,EACHC,EAAM,GACTA,GAAO,EAGX,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACjBlC,EACG+B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW5B,EAA1B,IAAiCG,EAAjC,QACAsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,aAAKjB,GAA5B,OAAgDL,EAAhD,IAAgEF,IAEpEsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWjB,EAA1B,QACAc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,aAAKX,GAA5B,YAAwDF,IAE5DW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWT,EAA1B,SACAM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,aAAKP,GAA5B,kBAEJK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWT,EAA1B,SACAM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,aAAKN,GAA5B,+BAEJI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWP,EAA1B,SACAI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,aAAKL,GAA5B,gBAEJG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,aAAKJ,GAA5B,KAAuCC,EAAvC,OAGN,OC/DCK,EAnCQ,WA4BnB,MAAO,CACHC,aA5BiB,WAAsC,IAArCC,EAAqCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB,KAAMG,EAAmBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KACxCI,EAAY,IAAItC,KAAKiC,EAAW,EAAG,GAGnCM,EAFU,IAAIvC,KAAKqC,EAAS,GAAI,IAEjBG,UAAYF,EAAUE,UAC3C,OAAO,IAAIxC,KAAKsC,EAAUE,UAAa1B,KAAK2B,SAAWF,IAwBvDG,WArBe,SAACxC,GAChB,IAAMwB,EAAOxB,EAAKD,UAAWE,WAAWC,SAAS,EAAG,KAC9CC,GAASH,EAAKI,WAAa,GAAGH,WAAWC,SAAS,EAAG,KAC3D,SAAAK,OAAUiB,EAAV,KAAAjB,OAAiBJ,EAAjB,KAAAI,OAA0BP,EAAKS,gBAmB/BgC,cAhBkB,SAACjB,GACnB,OAAQA,GACJ,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,UACf,KAAK,EAAG,MAAO,YACf,KAAK,EAAG,MAAO,WACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,WACf,QAAS,MAAO,gCCJbkB,MAhBf,SAAAjD,GAA4D,IAA3CC,EAA2CD,EAA3CC,WAAYiD,EAA+BlD,EAA/BkD,mBAAoBC,EAAWnD,EAAXmD,QAEtCH,EAAiBZ,IAAjBY,cAEP,OAAO/C,EACD+B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAAS,WAA4B,OAApBC,QAAQC,IAAI,OAAeN,QAExElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZsB,OAAAC,EAAA,EAAAD,CAAIE,MAAM,IAAIC,IAAI,SAACC,EAAGC,GAAJ,OACf9B,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQW,IAAKD,EAAGT,MAAOL,EAAcc,GAAIR,QAAS,kBAAMH,EAAQW,UCgBjEE,MA3Bf,SAAAhE,GAAgE,IAA9CE,EAA8CF,EAA9CE,YAAa+D,EAAiCjE,EAAjCiE,WAAYC,EAAqBlE,EAArBkE,kBAEhClB,EAAiBZ,IAAjBY,cAcP,OAAOhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAZJ,WAEd,GAAmB,OAAf8B,EACA,OAAO,KAEX,IAAME,EAAYhD,KAAKC,QAAO,IAAIf,MAAOwC,UAAYqB,GAAqB,KAE1E,OAAOD,IAAe/D,EAAYkE,SAC5BpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,mBAAyCH,EAAAC,EAAAC,cAAA,SAAIc,EAAciB,IAA3D,gBAAyFE,EAAzF,YACAnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,yBAAkDa,EAAciB,GAAhE,YAAqFjC,EAAAC,EAAAC,cAAA,SAAIc,EAAc9C,EAAYkE,WAAnH,gBAA+ID,EAA/I,KAILE,KC+BMC,MAxCf,WAAe,IAAAC,EACsBnC,IAA5BW,EADMwB,EACNxB,WAAYV,EADNkC,EACMlC,aADNmC,EAEyBC,mBAASpC,KAFlCqC,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAe,EAAA,GAENtE,EAFMwE,EAAA,GAEOE,EAFPF,EAAA,GAAAG,EAGuBJ,mBAAS,MAHhCK,EAAArB,OAAAkB,EAAA,EAAAlB,CAAAoB,EAAA,GAGNZ,EAHMa,EAAA,GAGMC,EAHND,EAAA,GAAAE,EAIqCP,oBAAS,IAAIpE,MAAOwC,WAJzDoC,EAAAxB,OAAAkB,EAAA,EAAAlB,CAAAuB,EAAA,GAINd,EAJMe,EAAA,GAIaC,EAJbD,EAAA,GAgBb,OACIjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,+CACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBY,EAAW7C,IAC3C8B,EAAAC,EAAAC,cAACiD,EAAD,CACElB,WAAYA,EACZ/D,YAAaA,EACbgE,kBAAmBA,IAErBlC,EAAAC,EAAAC,cAACkD,EAAD,CACInF,WAA2B,OAAfgE,EACZf,mBAlBe,WACzBgC,GAAqB,IAAI7E,MAAOwC,WAChC+B,EAAevC,KACf0C,EAAc,OAgBJ5B,QAAS,SAACpB,GAAD,OAvBL,SAACA,GACfgD,EAAchD,GAsBcoB,CAAQpB,MAE9BC,EAAAC,EAAAC,cAACmD,EAAD,CACIpF,WAA2B,OAAfgE,EACZ/D,YAAaA,OCjCZoF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAA3F,GAAiD,IAA9C6F,EAA8C7F,EAA9C6F,OAAQC,EAAsC9F,EAAtC8F,OAAQC,EAA8B/F,EAA9B+F,OAAQC,EAAsBhG,EAAtBgG,OAAQC,EAAcjG,EAAdiG,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACPnE,EAAAC,EAAAC,cAACF,EAAAC,EAAMmE,WAAP,KACEpE,EAAAC,EAAAC,cAACmE,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.9d9539d7.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Breakdown({ hasGuessed, dateToGuess }) {\n\n    const isLeap = year => new Date(year, 1, 29).getDate() === 29;\n\n    const getReferenceDate = (month, year) => {\n        switch (month) {\n            case 0: return !isLeap(year) ? 3 : 4;\n            case 1: return !isLeap(year) ? 28 : 29;\n            case 2: return 14;\n            case 3: return 4;\n            case 4: return 9;\n            case 5: return 6;\n            case 6: return 11;\n            case 7: return 8;\n            case 8: return 5;\n            case 9: return 10;\n            case 10: return 7;\n            case 11: return 12;\n            default: throw new Error(`Invalid month ${month}`);\n        }\n    };\n\n    const getCenturyReference = (year) => {\n        year = Math.floor(year / 100) * 100;\n\n        while (year < 2000) {\n            year += 400;\n        }\n        while (year > 2300) {\n            year -= 400;\n        }\n\n        return year;\n    };\n\n    const getCenturyOffset = (yearReference) => {\n\n        switch (yearReference) {\n            case 2000: return 2;\n            case 2100: return 0;\n            case 2200: return 5;\n            case 2300: return 3;\n            default: throw new Error(`Invalid year reference ${yearReference}`);\n        }\n    };\n\n    const date = dateToGuess.getDate().toString().padStart(2, '0');\n    const month = (dateToGuess.getMonth() + 1).toString().padStart(2, '0');\n\n    const referenceDate = getReferenceDate(dateToGuess.getMonth(), dateToGuess.getFullYear());\n    let dateOffset = (date - referenceDate) % 7;\n    while (dateOffset < 0) {\n        dateOffset += 7;\n    }\n\n    const century = Math.floor(dateToGuess.getFullYear() / 100) * 100;\n    const centuryReference = getCenturyReference(dateToGuess.getFullYear());\n    const centuryOffset = getCenturyOffset(centuryReference);\n\n    const decade = dateToGuess.getFullYear() - century;\n    const twelveYearsCount = Math.floor(decade / 12);\n    const twelveRest = decade - (twelveYearsCount * 12);\n    const restLeapYears = Math.floor(twelveRest / 4);\n    const sum = dateOffset + centuryOffset + twelveYearsCount + twelveRest + restLeapYears;\n    let day = sum;\n    while (day > 6) {\n        day -= 7;\n    }\n\n    return <div className=\"breakdown\">\n        {hasGuessed ?\n            <div className=\"breakdown-content\">\n                <div className=\"entry\">\n                    <div className=\"element\">{date}.{month} is </div>\n                    <div className=\"value\"><b>+{dateOffset}</b> to {referenceDate}.{month}</div>\n                </div>\n                <div className=\"entry\">\n                    <div className=\"element\">{century} is </div>\n                    <div className=\"value\"><b>+{centuryOffset}</b> same as {centuryReference}</div>\n                </div>\n                <div className=\"entry\">\n                    <div className=\"element\">{decade} has </div>\n                    <div className=\"value\"><b>+{twelveYearsCount}</b> twelve years</div>\n                </div>\n                <div className=\"entry\">\n                    <div className=\"element\">{decade} has </div>\n                    <div className=\"value\"><b>+{twelveRest}</b> rest from twelve division</div>\n                </div>\n                <div className=\"entry\">\n                    <div className=\"element\">{twelveRest} has </div>\n                    <div className=\"value\"><b>+{restLeapYears}</b> leap years</div>\n                </div>\n                <div className=\"entry sum\">\n                    <div className=\"element\">&nbsp;</div>\n                    <div className=\"value\"><b>+{sum}</b> ({day})</div>\n                </div>\n            </div>\n            : null}\n    </div>\n}\n\nexport default Breakdown;","\nconst useDateHelpers = () => {\n    const generateDate = (startYear = 1200, endYear = 2300) => {\n        const startDate = new Date(startYear, 1, 1);\n        const endDate = new Date(endYear, 12, 31);\n\n        const diff = endDate.getTime() - startDate.getTime();\n        return new Date(startDate.getTime() + (Math.random() * diff));\n    };\n\n    const formatDate = (date) => {\n        const day = (date.getDate()).toString().padStart(2, '0');\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        return `${day}.${month}.${date.getFullYear()}`;\n    };\n\n    const formatWeekDay = (day) => {\n        switch (day) {\n            case 0: return 'Sunday';\n            case 1: return 'Monday';\n            case 2: return 'Tuesday';\n            case 3: return 'Wednesday';\n            case 4: return 'Thursday';\n            case 5: return 'Friday';\n            case 6: return 'Saturday';\n            default: return 'Unknown day';\n        }\n    };\n\n    return {\n        generateDate,\n        formatDate,\n        formatWeekDay\n    };\n}\n\nexport default useDateHelpers;","import React from 'react';\n\nimport {Button} from \"primereact/button\";\nimport useDateHelpers from \"../Helpers/DateHelpers\";\n\nfunction Guess({ hasGuessed, onGenerateNewGuess, onGuess }) {\n\n    const {formatWeekDay} = useDateHelpers();\n\n    return hasGuessed\n        ? <div className=\"buttons\">\n            <Button label=\"New guess\" onClick={() => { console.log('tse'); return onGenerateNewGuess() }} />\n        </div>\n        : <div className=\"buttons\">\n            {[...Array(7)].map((_, i) =>\n                <Button key={i} label={formatWeekDay(i)} onClick={() => onGuess(i)} />\n            )}\n        </div>\n    ;\n}\n\nexport default Guess;","import React from 'react';\nimport * as PropTypes from \"prop-types\";\nimport useDateHelpers from \"../Helpers/DateHelpers\";\n\nfunction Status({ dateToGuess, guessedDay, startGuessingTime }) {\n\n    const {formatWeekDay} = useDateHelpers();\n\n    const getStatus = () => {\n\n        if (guessedDay === null)\n            return null;\n\n        const guessTime = Math.floor((new Date().getTime() - startGuessingTime) / 1000);\n\n        return guessedDay === dateToGuess.getDay()\n            ? <div className=\"correct\">Correct, it was <b>{formatWeekDay(guessedDay)}</b>, guess took {guessTime} seconds</div>\n            : <div className=\"incorrect\">Incorrect, it was not {formatWeekDay(guessedDay)}. It was <b>{formatWeekDay(dateToGuess.getDay())}</b>, guess took {guessTime}s</div>;\n    };\n\n    return <div className=\"status\">\n        {getStatus()}\n    </div>\n}\n\nStatus.propTypes = {\n    dateToGuess: PropTypes.any,\n    guessedDay: PropTypes.any,\n    startGuessingTime: PropTypes.any,\n};\n\nexport default Status;","import React from 'react';\nimport './App.css';\n\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\"; //theme\nimport \"primereact/resources/primereact.min.css\"; //core css\nimport \"primeicons/primeicons.css\";\nimport {useState} from \"react\";\nimport Breakdown from \"./Components/Breakdown\";\nimport useDateHelpers from \"./Helpers/DateHelpers\";\nimport Guess from \"./Components/Guess\";\nimport Status from \"./Components/Status\"; //icons\n\nfunction App() {\n  const {formatDate, generateDate} = useDateHelpers();\n  const [dateToGuess, setDateToGuess] = useState(generateDate());\n  const [guessedDay, setGuessedDay] = useState(null);\n  const [startGuessingTime, setStartGuessingTime] = useState(new Date().getTime());\n\n  const onGuess = (day) => {\n    setGuessedDay(day);\n  };\n\n  const onGenerateNewGuess = () => {\n    setStartGuessingTime(new Date().getTime());\n    setDateToGuess(generateDate());\n    setGuessedDay(null);\n  };\n\n  return (\n      <div className=\"app-wrapper\">\n        <div className=\"app\">\n          <div className=\"call-to-action\">What was the day of the week for this date?</div>\n          <div className=\"date-to-guess\">{formatDate(dateToGuess)}</div>\n          <Status\n            guessedDay={guessedDay}\n            dateToGuess={dateToGuess}\n            startGuessingTime={startGuessingTime}\n          />\n          <Guess\n              hasGuessed={guessedDay !== null}\n              onGenerateNewGuess={onGenerateNewGuess}\n              onGuess={(day) => onGuess(day)}\n          />\n          <Breakdown\n              hasGuessed={guessedDay !== null}\n              dateToGuess={dateToGuess}\n          />\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}